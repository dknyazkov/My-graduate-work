create table if not exists public.flyway_schema_history
(
    installed_rank integer                 not null
    constraint flyway_schema_history_pk
    primary key,
    version        varchar(50),
    description    varchar(200)            not null,
    type           varchar(20)             not null,
    script         varchar(1000)           not null,
    checksum       integer,
    installed_by   varchar(100)            not null,
    installed_on   timestamp default now() not null,
    execution_time integer                 not null,
    success        boolean                 not null
    );

alter table public.flyway_schema_history
    owner to postgres;


create index if not exists flyway_schema_history_s_idx
    on public.flyway_schema_history (success);

create table if not exists public.hotel
(
    id              uuid not null,
    amount_of_stars integer,
    country         varchar(255),
    description     varchar(255),
    name            varchar(255),
    price    double precision,
    room_count int4 not NULL default 0,
    CONSTRAINT hotel_pkey PRIMARY KEY (id)
    );

alter table public.hotel
    owner to postgres;

create table if not exists public.payment_card
(
    id            uuid not null
    primary key,
    end_date      timestamp,
    name_of_owner varchar(255),
    type          varchar(255)
    );

alter table public.payment_card
    owner to postgres;

create table if not exists public.role
(
    id          uuid not null
    primary key,
    description varchar(255),
    title       varchar(255)
    );

alter table public.role
    owner to postgres;

create table if not exists public.person
(
    id           uuid not null
    primary key,
    email        varchar(255),
    is_enabled   boolean,
    password     varchar(255),
    phone_number varchar(255),
    username     varchar(255),
    payment_id   uuid
    constraint fkmvydfjjr1uaqbh766eejaeopw
    references public.payment_card,
    role_id      uuid
    constraint fkfqfeq5nokuewxxtb44t9lw012
    references public.role
    );

alter table public.person
    owner to postgres;

create table if not exists public.permissions
(
    id        bigint generated by default as identity
    primary key,
    name      varchar(255),
    person_id uuid
    constraint fkl3lya2wu3fscnx143qk70fn5q
    references public.person
    );

alter table public.permissions
    owner to postgres;

create table if not exists public.room
(
    id       uuid not null
    primary key,
    name     varchar(255),
    price    double precision,
    remain  integer,
    hotel_id uuid
    constraint fkdosq3ww4h9m2osim6o0lugng8
    references public.hotel
    );

alter table public.room
    owner to postgres;

create table if not exists  hotel_room (
                                           id serial  		not null,
                                           hotel_id 		uuid not null,
                                           room_category 	varchar( 200 )  not null,
    room_count      int4  			not null,
    room_price 	    double precision not null default 0.00,
    constraint  hotel_room_pk  primary key ( id )
    );
alter table public.hotel_room
    owner to postgres;

create table if not exists public.reservation
(
    id              uuid not null
    primary key,
    count_of_guests integer,
    created         date,
    number_of_rooms  integer,
    cost   double precision,
    finish_of_date  timestamp,
    start_of_date   timestamp,
    email           varchar(255),
    person_id       uuid
    constraint fkif7cbbdjfxjdtu7dnqks3r8lt
    references public.person,
    room_id         uuid
    constraint fkm8xumi0g23038cw32oiva2ymw
    references public.room
    );

alter table public.reservation
    owner to postgres;

